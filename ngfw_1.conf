input{stdin {}}

filter {
  #if [observer][type] == "ngfw" and [observer][vendor] == "sophos" and ( [observer][product] == "XG" or [observer][product] == "sophos" or [observer][product] == "ngfw-sophos" ) {

    mutate {
      add_field => { "ecs.version" => "8.6.0" }
        
      add_field => { 
        "[event][dataset]" => "sophos"
      }
    }
    mutate {
      rename => { "message" => "event.original" }
    }
    grok {
      match => {"event.original" => "%{SYSLOG5424PRI}(%{SYSLOGTIMESTAMP} %{NOTSPACE} )?%{GREEDYDATA:message}"}
      match => {"event.original" => "%{SYSLOG5424PRI}%{GREEDYDATA:message}"}
      match => {"event.original" => "%{SYSLOGTIMESTAMP} %{HOSTNAME:observer.hostname} %{GREEDYDATA:message}"}
      match => {"event.original" => "%{GREEDYDATA:message}"}
    }

    kv {
      source => "message"
      field_split_pattern => " (?=[a-zA-Z0-9_]+=)"
      value_split => "="
      trim_key => "\n"
      target => "[sophos][xg]"
      transform_key => "lowercase"
      #           transform_value => "lowercase"
    }

    if [sophos][xg][date] and [sophos][xg][time]  {
      mutate {
        add_field => { "_temp_.time" => "%{[sophos][xg][date]} %{[sophos][xg][time]}"}
      }
    }
    if [sophos][xg][timestamp] {
      mutate {
        add_field => { "[_temp_][time]" => "%{[sophos][xg][timestamp]}" }
      }
    }

    date {
      match => [
        "[_temp_][time]",
        "yyyy-MM-dd HH:mm:ss",
        "yyyy-MM-dd HH:mm:ss Z",
        "yyyy-MM-dd HH:mm:ss z",
        "ISO8601"
        ]
      target => "event_timestamp"
      timezone => "%{[sophos][xg][timezone]}"
    }

    mutate {
      add_field => { "[event][severity]" => "%{[sophos][xg][log_id]}" }
      add_field => { "[enrich][code]" => "%{[sophos][xg][log_id]}" }
    }
    mutate {
      gsub => [ "[event][severity]" , "^.{6}(.).*$" , "\1" ]
    }

    mutate {
      convert => { "[event][severity]" => "integer"}
    }
    mutate {
      gsub => [ "[enrich][code]" , '^.{7}(.{5})$' , '\1' ]
    }
    if [event][severity] == 0 {
      mutate {
        add_field => { "[log][level]" => "unknown"}
      }
    }
    if [event][severity] == 1 {
      mutate {
        add_field => { "[log][level]" => "alert"}
      }
    }
    if [event][severity] == 2 {
      mutate {
        add_field => { "[log][level]" => "critical"}
      }
    }
    if [event][severity] == 3 {
      mutate {
        add_field => { "[log][level]" => "error"}
      }
    }
    if [event][severity] == 4 {
      mutate {
        add_field => { "[log][level]" => "warning"}
      }
    }
    if [event][severity] == 5 {
      mutate {
        add_field => { "[log][level]" => "notification"}
      }
    }
    if [event][severity] == 6 {
      mutate {
        add_field => { "[log][level]" => "informational"}
        }
    }
    if [event][severity] == 7 {
        mutate {
        add_field => { "[log][level]" => "debug"}
        }
    }
    mutate {
        add_field => { "[sophos][xg][severity]"=> "%{[log][level]}" }
    }

    mutate {
        rename => { "[sophos][xg][device_id]" => "[observer][serial_number]" }
        rename => { "[sophos][xg][device_serial_id]" => "[observer][serial_number]" }
        rename => { "[sophos][xg][out_interface]" => "[observer][egress][interface][name]" }
        rename => { "[sophos][xg][in_interface]" => "[observer][ingress][interface][name]" }
        rename => { "[sophos][xg][srczone]" => "[observer][ingress][zone]" }
        rename => { "[sophos][xg][src_zone]" => "[observer][ingress][zone]" }
        rename => { "[sophos][xg][dstzone]" => "[observer][egress][zone]" }
        rename => { "[sophos][xg][dst_zone]" => "[observer][egress][zone]" }
        rename => { "[sophos][xg][srczonetype]" => "[sophos][xg][src_zone_type]" }
        rename => { "[sophos][xg][dstzonetype]" => "[sophos][xg][dst_zone_type]" }
    }



    if [sophos][xg][sent_bytes]  {
        mutate {
        rename => { "[sophos][xg][sent_bytes]" => "[source][bytes]"}
        }
    }
    if [sophos][xg][bytes_sent]  {
        mutate {
        rename => { "[sophos][xg][bytes_sent]" => "[source][bytes]"}
        }
    }
    if [sophos][xg][recv_bytes]  {
      mutate {
        rename => { "[sophos][xg][recv_bytes]" => "[destination][bytes]"}
      }
    }
    if [sophos][xg][bytes_received]  {
      mutate {
        rename => { "[sophos][xg][bytes_received]" => "[destination][bytes]"}
      }
    }
    mutate {
    convert => { "[source][bytes]" => "integer" }
    #     convert => { "[sophos][xg][bytes_sent]" => "integer" }
    convert => { "[destination][bytes]" => "integer" }
    #     convert => { "[sophos][xg][bytes_received]" => "integer" }
    }
    mutate {
      rename => { "[sophos][xg][src_mac]" => "[source][mac]" }
      rename => { "[sophos][xg][src_country]" => "[source][geo][country_name]" }
    }
    mutate { uppercase => "[source][mac]" }
    mutate {
      gsub => [ "[source][mac]" , '[-:. ]' , '' ]
      gsub => [ "[source][mac]" , '(..)(?!$)' , '\1-' ]
    }
    mutate {
      rename => { "[sophos][xg][dst_country]" => "[destination][geo][country_name]" }
    }
    mutate {
      rename => { "[sophos][xg][dst_mac]" => "[destination][mac]" }
    }
    mutate { uppercase => "[destination][mac]" }
    mutate {
      gsub => [ "[destination][mac]" , '[-:.]' , '' ]
      gsub => [ "[destination][mac]" , '(..)(?!$)' , '\1-' ]
    }

    if [sophos][xg][log_type] == 'Anti-Spam' {
      mutate {     add_field => { "IngestPipeline" => "antispam" } }
    }
    if [sophos][xg][log_type] == 'Anti-Virus' {
      mutate {    add_field => { "IngestPipeline" => "antivirus" }}
    }
    if [sophos][xg][log_type] == 'ATP' {
      mutate {    add_field => { "IngestPipeline" => "atp" }}
    }
    if [sophos][xg][log_type] == 'Content Filtering' {
      mutate {      add_field => { "IngestPipeline" => "cfilter" }}
    }
    if [sophos][xg][log_type] == 'Event' {
      mutate {      add_field => { "IngestPipeline" => "event" }}
    }
    if [sophos][xg][log_type] == 'Firewall' {
      mutate {       add_field => { "IngestPipeline" => "firewall" }}
    }
    if [sophos][xg][log_type] == 'IDP' {
      mutate {     add_field => { "IngestPipeline" => "idp" }}
    }
    if [sophos][xg][log_type] == 'Sandbox' {
      mutate {      add_field => { "IngestPipeline" => "sandstorm" }}
    }
    if [sophos][xg][log_type] == 'System Health' {
      mutate {     add_field => { "IngestPipeline" => "systemhealth" }}
    }
    if [sophos][xg][log_type] == 'WAF' {
      mutate {      add_field => { "IngestPipeline" => "waf" }}
    }
    if [sophos][xg][log_type] == 'Wireless Protection' {
      mutate {      add_field => { "IngestPipeline" => "wifi" }}
    }

    mutate {
      rename => { "[source][as][asn]" => "[source][as][number]" }
      rename => { "[source][as][organization_name]" => "[source][as][organization][name]" }
      rename => { "[destination][as][asn]" => "[destination][as][number]" }
      rename => { "[destination][as][organization_name]" => "[destination][as][organization][name]" }
    }

    mutate { lowercase => "[network][protocol]" }
    if [network][protocol] == "pops" {
      mutate {
        add_field => { "[network][protocol]" => "pop3s"}
      }
    }
    mutate { lowercase => "[network][protocol]" }
    if [source][bytes] or [destination][bytes] {
      ruby {
        code => 'event.set("[network][bytes]", event.get("[source][bytes]")+event.get("[destination][bytes]"))'
      }
    }

    if [host][name] {
      mutate {
        add_field => { "[related][hosts]" => "%{[host][name]}"}
      }
    }
    if [url][domain] {
      mutate {
        add_field => { "[related][hosts]" => "%{[url][domain]}"}
      }
    }
    if [source][domain] {
      mutate {
        add_field => { "[related][hosts]" => "%{[source][domain]}"}
      }
    }
    if [destination][domain] {
      mutate {
        add_field => { "[related][hosts]" => "%{[destination][domain]}"}
       }
    }
    if [source][ip] {
      mutate {
        add_field => { "[related][ip]" => "%{[source][ip]}"}
      }
    }
    if [destination][ip] {
      mutate {
        add_field => { "[related][ip]" => "%{[destination][ip]}"}
      }
    }
    if [source][nat][ip] {
      mutate {
        add_field => { "[related][ip]" => "%{[source][nat][ip]}"}
      }
    }
    if [destination][nat][ip] {
      mutate {
        add_field => { "[related][ip]" => "%{[destination][nat][ip]}"}
      }
    }
    if [source][user][name] {
      mutate {
        add_field => { "[related][user]" => "%{[source][user][name]}"}
      }
    }
    if [file][hash][sha1] {
      mutate {
        add_field => { "[related][hash]" => "%{[file][hash][sha1]}"}
      }
    }
    if [file][hash][sha256] {
      mutate {
        add_field => { "[related][hash]" => "%{[file][hash][sha256]}"}
      }
    }
    mutate {
      rename => { 
        "[sophos][xg][reason]" => "[event][reason]" 
        "rawmessage" => "[event][original]"
      }
    }
    mutate {
      remove_field => ["message", "[_temp_][time]","[_temp_]" ]
    }
    
    ################ antispam ###############
    if [IngestPipeline] == "antispam" {
      mutate {
        add_field => { "[event][kind]" => "event" }
        add_field => { "[event][outcome]" => "success" }
        add_field => { "[event][category]" => "network" }
      }
      mutate {
        add_field => { "[event][action]" => "%{[sophos][xg][log_subtype]}" }
      }      
      if [enrich][code] in ["13001", "13002", "13004", "13005", "13006", "13009", "13012", "13014", "14001", "14002", "15001", "15002"] {
        mutate {
          add_field => { "[event][kind]" => "alert"}
        }
      }
      if [enrich][code] in ["13001", "13002", "13004", "13005", "13006", "13009", "13014", "14001", "14002", "15001", "15002"] {
        mutate {
          add_field => { "[event][category]" => "malware"}
        }
      }
      if [enrich][code] == '13012' {
        mutate {
          add_field => { "[event][category]" => "intrusion_detection"}
        }
      }
      if [enrich][code] in ["13003", "13007", "13008", "13010", "13013", "14003", "15003", "18035"] {
        mutate {
          add_field => { "[event][type]" => "['allowed', 'connection']"}
        }
      }
      if [enrich][code] in ["13001", "13002", "13004", "13005", "13006", "13009", "13012", "13014", "14001", "14002", "15001", "15002"] {
        mutate {
          add_field => { "[event][type]" => "['info', 'denied', 'connection']"}
        }
      }
      if [sophos][xg][dst_ip]  {
        mutate {
          rename => { "[sophos][xg][dst_ip]" => "[destination][ip]"}
          rename => { "[sophos][xg][src_ip]" => "[source][ip]" }
        }
      }
      if [sophos][xg][dst_port] {
        mutate {
          rename => { "[sophos][xg][dst_port]" => "[destination][port]"}  
          convert => {
            "[destination][port]" => "integer"
          }
        }
      }
      if [sophos][xg][src_port]  {
        mutate {
          rename => { "[sophos][xg][src_port]" => "[source][port]"}
    	  convert => {
            "[source][port]" => "integer"
          }
        }
      }
      mutate {
        rename => { "[sophos][xg][src_domainname]" => "[source][domain]" }
        rename => { "[sophos][xg][from_email_address]" => "[source][user][email]" }
        rename => { "[sophos][xg][to_email_address]" => "[destination][user][email]" }
        rename => { "[sophos][xg][protocol]" => "[network][protocol]" }
      }
      if [source][user][email]  {
        mutate {
          add_field => { "[email][from][address]" => "%{[source][user][email]}"}
        }
      }
      if [destination][user][email] {
        mutate {
          add_field => { "[email][to][address]" => "%{[destination][user][email]}"}
        }
      }
      if [sophos][xg][email_subject]  {
        mutate {
          add_field => { "[email][subject]" => "[sophos][xg][email_subject]" }
    	}
      }
      mutate { lowercase => "[sophos][xg][log_component]" }
      mutate {
        remove_field => [ "[sophos][xg][dst_port]", "[sophos][xg][src_port]", "[sophos][xg][from_email_address]", "[sophos][xg][to_email_address]"]
      }
    }
    ################ sandstorm ###############
    if [IngestPipeline] == "sandstorm" {
      mutate {
        add_field => { "[event][kind]" => "event" }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][action]" => "%{[sophos][xg][log_subtype]}"}
        }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [sophos][xg][log_subtype] == "Denied" {
        mutate {
          add_field => { "[event][kind]" => "alert"}
        }
      }
      if [sophos][xg][log_subtype] == "Denied" {
        mutate {
          add_field => { "[event][category]" => "['malware', 'network']"}
        }
      }
      if [sophos][xg][log_subtype] != 'Denied' {
        mutate {
          add_field => { "[event][category]" => "network"}
        }
      }
      if [sophos][xg][log_subtype] in ['Allowed'] {
        mutate {
          add_field => { "[event][type]" => "allowed"}
        }
      }
      if [sophos][xg][reason] in ['pending'] {
        mutate {
          add_field => { "[event][type]" => "['start', 'connection']"}
        }
      }
      if [sophos][xg][reason] == 'eligible' {
        mutate {
          add_field => { "[event][type]" => "['end', 'connection']"}
        }
      }
      if [sophos][xg][log_subtype] == 'Denied' {
        mutate {
          add_field => { "[event][type]" => "['denied', 'connection']"}
        }
      }
      if [sophos][xg][log_component] == "Web" {
        mutate {
          rename => { "[sophos][xg][source]" => "[url][domain]"}
        }
      }
      if [sophos][xg][src_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_ip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][user_name] != 'null' {
        mutate {
          rename => { "[sophos][xg][user_name]" => "[source][user][name]"}
        }
      }
      mutate {
        rename => { "[url][domain]" => "[destination][ip]" }
      }
      if [sophos][xg][filename] != 'null' {
        mutate {
          rename => { "[sophos][xg][filename]" => "[file][name]"}
        }
      }
      if [sophos][xg][filesize] != 'null' {
        mutate {
          rename => { "[sophos][xg][filesize]" => "[file][size]"}
        }
      }
      if [sophos][xg][filetype] != 'null' {
        mutate {
          rename => { "[sophos][xg][filetype]" => "file.mime_type"}
        }
      }
      if [sophos][xg][sha1sum] != 'null'  {
        ruby {
          code => 'event.set("[sophos][xg][sha1sum][length]", event.get("[sophos][xg][sha1sum]").length)'
        }
        	 
      	if [sophos][xg][sha1sum] == 40 {
          mutate {
            rename => { "[sophos][xg][sha1sum]" => "[file][hash][sha1]"}
          }
       	}
       	if [sophos][xg][sha1sum] == 60 {
          mutate {
            rename => { "[sophos][xg][sha1sum]" => "[file][hash][sha256]"}
          }	
     	}
      }
    }
    ################ antivirus ###############
    if [IngestPipeline] == "antivirus" {
      mutate {
        add_field => { "[event][kind]" => "alert" }
      }
      if [sophos][xg][log_subtype] {
        mutate {
          add_field => { "[event][action]" => "%{[sophos][xg][log_subtype}"}
        }
      }
      if [sophos][xg][log_subtype] {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [sophos][xg][log_subtype] == 'Virus' {
        mutate {
          add_field => { "[event][category]" => "['malware', 'network']"}
          add_field => { "[event][type]" => "['info', 'denied', 'connection']"}
        }
      }
      if [enrich][code] in ["09002"] {
        mutate {
          add_field => { "[event][kind]" => "event"}
        }
      }
      if [enrich][code] in ["09002"] {
        mutate {
          add_field => { "[event][type]" => "['allowed', 'connection']"}
        }
      }
      if [enrich][code] in ["09002"] {
        mutate {
          add_field => { "[event][category]" => "network"}
        }
      }
      if [sophos][xg][dst_ip] {
        mutate {
          rename => { "[sophos][xg][dst_ip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][dst_port] {
        mutate {
          rename => { "[sophos][xg][dst_port]" => "[destination][port]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][dstdomain]" => "[destination][domain]" }
      }
      mutate {
        rename => { "[sophos][xg][dst_domainname]" => "[destination][domain]" }
      }
      if [sophos][xg][src_ip ] {
        mutate {
          rename => { "[sophos][xg][src_ip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][src_port] {
        mutate {
          rename => { "[sophos][xg][src_port]" => "[source][port]"}
        }
      }
      if [sophos][xg][user_name] {
        mutate {
          rename => { "[sophos][xg][user_name]" => "[source][user][name]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][src_domainname]" => "[source][domain]" }
      }
      mutate {
        rename => { "[sophos][xg][from_email_address]" => "[source][user][email]" }
      }
      mutate {
        rename => { "[sophos][xg][to_email_address]" => "[destination][user][email]" }
      }
      if [source][user][email ] {
        mutate {
          add_field => { "[email][from][address]" => "%{[source][user][email]}"}
        }
      }
      if [destination][user][email ] {
        mutate {
          add_field => { "[email][to][address]" => "%{[destination][user][email]}"}
        }
      }
      mutate {
        add_field => { "[sophos][xg][email_subject]"=> "%{[email][subject]}" }
      }
      mutate {
        add_field => { "[sophos][xg][subject]"=> "%{[email][subject]}" }
      }
      if [rule][id] == 'null' {
        mutate {
          rename => { "[sophos][xg][fw_rule_id]" => "[rule][id]"}
        }
      }
      if [sophos][xg][url] {
        mutate {
          rename => { "[sophos][xg][url]" => "[url][original]"}
        }
      }

      mutate {
        add_field => { "[url][original]"=> "%{[url][full]}" }
      }
      mutate {
        rename => { "[sophos][xg][domainname]" => "[url][domain]" }
      }
      if [sophos][xg][user_agent ] {
        mutate {
          rename => { "[sophos][xg][user_agent]" => "[user_agent][original]"}
        }
      }
      if [sophos][xg][status_code] != 'null' and [sophos][xg][status_code] != '' {
        mutate {
          rename => { "[sophos][xg][status_code]" => "[http][response][status_code]"}
        }
      }
      if [sophos][xg][filename] {
        mutate {
          rename => { "[sophos][xg][filename]" => "[file][name]"}
        }
      }
      if [sophos][xg][file_size] {
        mutate {
          rename => { "[sophos][xg][file_size]" => "[file][size]"}
        }
      }
      if [sophos][xg][file_path] {
        mutate {
          rename => { "[sophos][xg][file_path]" => "[file][directory]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][protocol]" => "[network][protocol]" }
      }
      mutate { lowercase => "[sophos][xg][log_component]" }
      mutate { lowercase => "[event][info]" }
    }
    ################ system health ###############
    if [IngestPipeline] == "systemhealth" {
      mutate {
	      add_field => { "[event][kind]" => "event" }
      }
      mutate {
        rename => { "[sophos][xg][idle]" => "[sophos][xg][idle_cpu]" }
      }
      mutate {
        gsub => [ "[sophos][xg][idle_cpu]" , '%$' , '' ]
      }
      mutate {
        rename => { "[sophos][xg][system]" => "[sophos][xg][system_cpu]" }
      }
      mutate {
        gsub => [ "[sophos][xg][system_cpu]" , '%$' , '' ]
      }
      mutate {
        rename => { "[sophos][xg][user]" => "[sophos][xg][user_cpu]" }
      }
      mutate {
        gsub => [ "[sophos][xg][user_cpu]" , '%$' , '' ]
        gsub => [ "[sophos][xg][configuration]" , '%$' , '' ]
        gsub => [ "[sophos][xg][reports]" , '%$' , '' ]
        gsub => [ "[sophos][xg][temp]" , '%$' , '' ]
        gsub => [ "[sophos][xg][signature]" , '%$' , '' ]
      }
      mutate {
        convert => {
          "[sophos][xg][idle_cpu]" => "float"
          "[sophos][xg][system_cpu]" => "float"
          "[sophos][xg][user_cpu]" => "float"
          "[sophos][xg][used]" => "integer"
          "[sophos][xg][total_memory]" => "integer"
          "[sophos][xg][free]" => "integer"
          "[sophos][xg][configuration]" => "float"
          "[sophos][xg][reports]" => "float"
          "[sophos][xg][temp]" => "float"
          "[sophos][xg][signature]" => "float"
          "[sophos][xg][users]" => "integer"
          "[sophos][xg][transmittedkbits]" => "float"
          "[sophos][xg][receivedkbits]" => "float"
          "[sophos][xg][collisions]" => "float"
          "[sophos][xg][receiveddrops]" => "float"
          "[sophos][xg][transmitteddrops]" => "float"        
        }
      }
    }
    ################ atp ###############
    if [IngestPipeline] == "atp" {
      mutate {
        add_field => { "[event][kind]" => "alert" }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][action]" => "%{[sophos][xg][log_subtype}"}
        }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [enrich][code] in ["18009", "18010"] {
        mutate {
          add_field => { "[event][category]" => "['intrusion_detection', 'network']"}
        }
      }
      if [enrich][code] in ["18009", "18010"] {
        mutate {
          add_field => { "[event][type]" => "['denied', 'connection']"}
        }
      }
      if [sophos][xg][eventid] != 'null' {
        mutate {
          rename => { "[sophos][xg][eventid]" => "[event][id"}
        }
      }
      if [sophos][xg][destinationip] != 'null' {
        mutate {
          rename => { "[sophos][xg][destinationip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][dst_port] != 'null' {
        mutate {
          rename => { "[sophos][xg][dst_port]" => "[destination][port]"}
        }
      }
      if [sophos][xg][sourceip] != 'null' {
        mutate {
          rename => { "[sophos][xg][sourceip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][src_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_ip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][src_port] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_port]" => "[source][port]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][user_name]" => "[source][user][name]" }
      }
      if [sophos][xg][url] != 'null' {
        mutate {
          rename => { "[sophos][xg][url]" => "[url][original]"}
        }
      }
      if [url][original] != 'null' and "://" in [url][original] {
        mutate {
          add_field => { "[url]"=> "[url][original]" }
        }
      }
      mutate {
        add_field => { "[url][full]"=> "[url][original]" }
      }
      mutate{
        rename => { "[sophos][xg][protocol]" => "[network][protocol]" }
      }
      mutate { lowercase => "[event][action]" }
      mutate { lowercase => "[event][info]" }
    }
    ################ cfilter ###############
    if [IngestPipeline] == "cfilter" {
      mutate {
        add_field => { "[event][kind]" => "event" }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][action]" => "%{[sophos][xg][log_subtype]}"}
        }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [sophos][xg][log_subtype] == "Denied" {
        mutate {
          add_field => { "[event][kind" => "alert"}
        }
      }
      if [sophos][xg][log_subtype] == "Denied" {
        mutate {
          add_field => { "[event][category]" => "['malware', 'network']"}
        }
      }
      if [sophos][xg][log_subtype] != 'Denied' {
        mutate {
          add_field => { "[event][category]" => "network"}
        }
      }
      if [sophos][xg][log_subtype] in ["Allowed", "Warned"] {
        mutate {
          add_field => { "[event][type]" => "['allowed', 'connection']"}
        }
      }
      if [sophos][xg][log_subtype] == 'Denied' {
        mutate {
          add_field => { "[event][type]" => "['info', 'denied', 'connection']"}
        }
      }
      if [sophos][xg][dst_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][dst_ip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][dst_port] != 'null' {
        mutate {
          rename => { "[sophos][xg][dst_port]" => "[destination][port]"}
        }
      }
      if [sophos][xg][src_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_ip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][src_port] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_port]" => "[source][port]"}
        }
      }
      if [sophos][xg][user_name] != 'null' {
        mutate {
          rename => { "[sophos][xg][user_name]" => "[source][user][name]"}
        }
      }
      if [sophos][xg][user_gp] != 'null' {
        mutate {
          rename => { "[sophos][xg][user_gp]" => "[source][user][group][name]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][url]" => "[url][original]" }
      }
      # if [url][original] != 'null' {
      #     mutate {
      #           add_field => { "[url]"=> "%{[url][original]}" }
      #     }
      # }
      if [url][original] != 'null' {
        mutate {
          add_field => { "[url][full]"=> "%{[url][original]}" }
        }
      }
      if [url][domain] == 'null' {
        mutate {
          rename => { "[sophos][xg][domain]" => "[url][domain]"}
        }
      }
      if [sophos][xg][referer] != 'null' {
        mutate {
          rename => { "[sophos][xg][referer]" => "[http][request][referrer]"}
        }
      }
      if [sophos][xg][status_code] != 'null' and [sophos][xg][status_code] != '' {
        mutate {
          rename => { "[sophos][xg][status_code]" => "[http][response][status_code]"}
        }
      }
      if [sophos][xg][http_status] != 'null' and [sophos][xg][http_status] != '' and [sophos][xg][http_status] != '0' {
        mutate {
          rename => { "[sophos][xg][http_status]" => "[http][response][status_code]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][user_agent]" => "[user_agent][original]" }
      }
      mutate {
        rename => { "[sophos][xg][protocol]" => "[network][protocol]" }
      }
      if [network][protocol] {
        mutate {
          add_field => { "[url][scheme]"=> "%{[network][protocol]}" }
        }
      } 
      mutate { lowercase => "[event][action]" }
    }    
    ################ event ###############
    if [IngestPipeline] == "event" {
      mutate {
        add_field => { "[event][kind]" => "event" }
      }
      if [sophos][xg][log_subtype] == "Authentication" and [sophos][xg][status] == "Successful" {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [sophos][xg][log_subtype] == "Authentication" and [sophos][xg][status] == "Failed" {
        mutate {
          add_field => { "[event][outcome]" => "failure"}
        }
      }
      if [sophos][xg][log_subtype] == "Admin" and [sophos][xg][status] == "Successful" and [enrich][code] == "17507" {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [sophos][xg][log_subtype] == "Admin" and [sophos][xg][status] == "Failed" and [enrich][code] == "17507" {
        mutate {
          add_field => { "[event][outcome]" => "failure"}
        }
      }
      if [enrich][code] in ['17701', '17704', '17707', '17710', '17713'] {
        mutate {
          add_field => { "[event][type]" => "['user', 'start']"}
        }
      }
      if [enrich][code] in ['17703', '17706', '17709', '17712', '17715'] {
        mutate {
          add_field => { "[event][type]" => "['user', 'end']"}
        }
      }
      if [sophos][xg][auth_client] in ['SSLVPN', 'IPSec', 'Thin Client', 'Radius SSO'] {
        mutate {
          add_field => { "[event][type]" => "connection"}
        }
      }
      if [sophos][xg][auth_client] in ['SSLVPN', 'IPSec', 'Thin Client', 'Radius SSO'] {
        mutate {
          add_field => { "[event][category]" => "network"}
        }
      }
      if [sophos][xg][log_subtype] == "Authentication" {
        mutate {
          add_field => { "[event][category]" => "authentication"}
        }
      }
      if [enrich][code] == "17819" {
        mutate {
          add_field => { "[event][type]" => "info"}
        }
      }
      if [enrich][code] == "17819" {
        mutate {
          add_field => { "[event][category]" => "['host', 'malware']"}
        }
      }
      if [sophos][xg][dst_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][dst_ip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][localinterfaceip] != 'null' {
        mutate {
          rename => { "[sophos][xg][localinterfaceip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][src_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_ip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][remoteinterfaceip] != 'null' {
        mutate {
          rename => { "[sophos][xg][remoteinterfaceip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][user_name] != 'null' {
        mutate {
          rename => { "[sophos][xg][user_name]" => "[source][user][name]"}
        }
      }
      if [sophos][xg][name] != 'null' {
        mutate {
          add_field => { "[source][user][name]" => "%{[sophos][xg][name]}"}
        }
      }
      if [sophos][xg][log_subtype] == "Authentication" {
        mutate {
          add_field => { "[user][name]" => "%{[source][user][name]}"}
        }
      }
      if [sophos][xg][usergroupname] != 'null' {
        mutate {
          rename => { "[sophos][xg][usergroupname]" => "[source][user][group][name]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][message]" => "message" }
      }
    }    
    ################ idp ###############
    if [IngestPipeline] == "idp" {
      mutate {
        add_field => { "[event][kind]" => "alert" }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][action]" => "%{[sophos][xg][log_subtype]}"}
        }
      }
      if [sophos][xg][log_subtype] != 'null' {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [enrich][code] in ["06001", "06002", "07001", "07002"] {
        mutate {
          add_field => { "[event][category]" => "['intrusion_detection', 'network']"}
        }
      }
      if [enrich][code] in ["06001", "06002", "07001", "07002"] {
        mutate {
          add_field => { "[event][type]" => "['denied', 'connection']"}
        }
      }
      if [sophos][xg][dst_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][dst_ip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][dst_port] != 'null' {
        mutate {
          rename => { "[sophos][xg][dst_port]" => "[destination][port]"}
        }
      }
      if [sophos][xg][src_ip] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_ip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][src_port] != 'null' {
        mutate {
          rename => { "[sophos][xg][src_port]" => "[source][port]"}
        }
      }
      if [sophos][xg][user_name] != 'null' {
        mutate {
          rename => { "[sophos][xg][user_name]" => "[source][user][name]"}
        }
      }
      if [sophos][xg][signature_id] != 'null' {
        mutate {
          rename => { "[sophos][xg][signature_id]" => "[rule][id]"}
        }
      }
      if [sophos][xg][signature_msg] != 'null' {
        mutate {
          rename => { "[sophos][xg][signature_msg]" => "[rule][name]"}
        }
      }
      if [sophos][xg][classification] != 'null' {
        mutate {
          rename => { "[sophos][xg][classification]" => "[rule][category]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][protocol]" => "[network][protocol]" }
      }
      mutate { lowercase => "[network][protocol]" }
      mutate { lowercase => "[event][action]" }
      mutate { lowercase => "[event][info]" }
    }    
    ################ firewall ###############
    if [IngestPipeline] == "firewall" {
      mutate {
        add_field => { "[event][kind]" => "event" }
      }
      if [sophos][xg][log_subtype] {
        mutate {
          add_field => { "[event][action]" => "%{[sophos][xg][log_subtype]}"}
          add_field => { "[event][outcome]" => "success"} 
        }
      }
      if [enrich][code] in ["03001", "05001", "05151", "00003", "00004"] {
        mutate {
          add_field => { "[event][kind]" => "alert"}
        }
      }
      if [enrich][code] in ["03001", "05001", "05151", "00003", "00004"] {
        mutate {
          add_field => { "[event][category]" => "intrusion_detection"}
        }
      }
      mutate {
        add_field => { "[event][category]" => "network" }
      }
      if [sophos][xg][connevent] in ['Start', 'Interim'] {
        mutate {
          add_field => { "[event][type]" => "['start', 'allowed', 'connection']"}
        }
      }
      if [sophos][xg][connevent] == 'Stop' {
        mutate {
          add_field => { "[event][type]" => "['end', 'allowed', 'connection']"}
        }
      }
      if [sophos][xg][status] == 'Deny' {
        mutate {
          add_field => { "[event][type]" => "['denied', 'connection']"}
                }
      }
      if [sophos][xg][dst_ip] {
        mutate {
          rename => { "[sophos][xg][dst_ip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][dst_trans_ip] {
        mutate {
          rename => { "[sophos][xg][dst_trans_ip]" => "[destination][nat][ip]"}
        }
      }
      if [sophos][xg][tran_dst_ip] {
        mutate {
          rename => { "[sophos][xg][tran_dst_ip]" => "[destinaton][nat][ip]"}
        }
      }
      if [sophos][xg][destinationip] {
        mutate {
          rename => { "[sophos][xg][destinationip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][dst_port] {
        mutate {
          rename => { "[sophos][xg][dst_port]" => "[destination][port]"}
        }
      }
      if [sophos][xg][tran_dst_port] {
        mutate {
          rename => { "[sophos][xg][tran_dst_port]" => "[destination][nat][port]"}
        }
      }
      if [sophos][xg][recv_pkts] {
        mutate {
          rename => { "[sophos][xg][recv_pkts]" => "[destination][packets]"}
        }
      }
      if [sophos][xg][packets_received] {
        mutate {
          rename => { "[sophos][xg][packets_received]" => "[destination][packets]"}
        }
      }
      if [sophos][xg][src_ip] {
        mutate {
          rename => { "[sophos][xg][src_ip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][tran_src_ip] {
        mutate {
          rename => { "[sophos][xg][tran_src_ip]" => "[source][nat][ip]"}
        }
      }
      if [sophos][xg][src_trans_ip] {
        mutate {
          rename => { "[sophos][xg][src_trans_ip]" => "[source][nat][ip]"}
        }
      } 
      if [sophos][xg][sourceip] {
        mutate {
          rename => { "[sophos][xg][sourceip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][src_port] {
        mutate {
          rename => { "[sophos][xg][src_port]" => "[source][port]"}
        }
      }
      if [sophos][xg][tran_src_port] {
        mutate {
          rename => { "[sophos][xg][tran_src_port]" => "[source][nat][port]"}
        }
      }
      if [sophos][xg][src_mac] {
        mutate {
          rename => { "[sophos][xg][src_mac]" => "[source][mac]"}
        }
      }
      if [sophos][xg][src_country] {
        mutate {
         rename => { "[sophos][xg][src_country]" => "[source][geo][country_name]" }
        }
      }
      if [sophos][xg][sent_pkts] {
        mutate {
          rename => { "[sophos][xg][sent_pkts]" => "[source][packets]"}
        }
      }
      if [sophos][xg][packets_sent] {
        mutate {
          rename => { "[sophos][xg][packets_sent]" => "[source][packets]"}
        }
      }
      if [sophos][xg][user_name] {
        mutate {
          rename => { "[sophos][xg][user_name]" => "[source][user][name]"}
        }
      }
      if [sophos][xg][user_gp] {
        mutate {
          rename => { "[sophos][xg][user_gp]" => "[source][user][group][name]"}
        }
      }
      if [rule][id] {
        mutate {
          rename => { "[sophos][xg][fw_rule_id]" => "tr[rule][id]"}
        }
      }
      if [sophos][xg][policy_type] {
        mutate {
          rename => { "[sophos][xg][policy_type]" => "[rule][ruleset]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][application]" => "[network][protocol]" }
      }
      mutate {
        rename => { "[sophos][xg][protocol]" => "[network][protocol]" }
      }
      if [observer][egress][zone] in ['LAN', 'DMZ', 'VPN', 'WiFi'] and [observer][ingress][zone] == 'WAN' {
        mutate {
          add_field => { "[network][direction]" => "inbound"}
        }
      }
      if [observer][ingress][zone] in ['LAN', 'DMZ', 'VPN', 'WiFi'] and [observer][egress][zone] == 'WAN' {
        mutate {
          add_field => { "[network][direction]" => "outbound"}
        }
      }
      if [observer][ingress][zone] in ['LAN', 'DMZ', 'VPN', 'WiFi'] and [observer][egress][zone] in ['LAN', 'DMZ', 'VPN', 'WiFi'] {
        mutate {
          add_field => { "[network][direction]" => "internal"}
        }
      }
      if [observer][ingress][zone] == 'WAN' and [observer][egress][zone] == 'WAN' {
        mutate {
          add_field => { "[network][direction]" => "external"}
        }
      }
      mutate { lowercase => "[event][action]" }
    }
    ################ waf ###############
    if [IngestPipeline] == "waf" {
      mutate {
        add_field => { "[event][kind]" => "event" }
      }
      if [sophos][xg][reason] == "-" {
        mutate {
          add_field => { "[event][action]" => "allowed"}
        }
      }
      if [sophos][xg][reason] != "-" {
        mutate {
          add_field => { "[event][action]" => "denied"}
        }
      }
      if [sophos][xg][reason] != 'null' {
        mutate {
          add_field => { "[event][outcome]" => "success"}
        }
      }
      if [sophos][xg][reason] != "-" {
        mutate {
          add_field => { "[event][kind]" => "alert"}
        }
      }
      if [sophos][xg][reason] == "Antivirus" {
        mutate {
          add_field => { "[event][category]" => "['malware', 'network']"}
        }
      }
      if [sophos][xg][reason] != 'Antivirus' and [sophos][xg][reason] != '-' {
        mutate {
          add_field => { "[event][category]" => "['intrusion_detection', 'network']"}
        }
      }
      if [sophos][xg][reason] == "-" {
        mutate {
          add_field => { "[event][type]" => "['allowed', 'connection']"}
        }
      }
      if [sophos][xg][reason] != "-" {
        mutate {
          add_field => { "[event][type]" => "['denied', 'connection']"}
        }
      }
      mutate {
        convert => { "[sophos][xg][responsetime]" => "integer" }
      }

      if [sophos][xg][localip] != 'null' {
        mutate {
          rename => { "[sophos][xg][localip]" => "[destination][ip]"}
        }
      }
      if [sophos][xg][bytessent] != 'null' {
        mutate {
          rename => { "[sophos][xg][bytessent]" => "[destination][bytes]"}
        }
      }
      if [sophos][xg][sourceip] != 'null' {
        mutate {
          rename => { "[sophos][xg][sourceip]" => "[source][ip]"}
        }
      }
      if [sophos][xg][bytesrcv] != 'null' {
        mutate {
          rename => { "[sophos][xg][bytesrcv]" => "[source][bytes]"}
        }
      }
      if [sophos][xg][user_name] != 'null' {
        mutate {
          rename => { "[sophos][xg][user_name]" => "[source][user][name]"}
        }
      }
      if [sophos][xg][user_gp] != 'null' {
        mutate {
          rename => { "[sophos][xg][user_gp]" => "[source][user][group][name]"}
        }
      }
      if [sophos][xg][url] != 'null' {
        mutate {
          rename => { "[sophos][xg][url]" => "[url][full]"}
        }
      }
      if [sophos][xg][domain] != 'null' {
        mutate {
          rename => { "[sophos][xg][domain]" => "[url][domain]"}
        }
      }
      if [sophos][xg][referer] != 'null' {
        mutate {
          rename => { "[sophos][xg][referer]" => "[http][request][referrer]"}
        }
      }
      if [sophos][xg][httpstatus] != 'null' {
        mutate {
          rename => { "[sophos][xg][httpstatus]" => "[destination][bytes]"}
        }
      }
      if [sophos][xg][method] != 'null' {
        mutate {
          rename => { "[sophos][xg][method]" => "[http][request][method]"}
        }
      }
      if [sophos][xg][ws_protocol] != 'null' {
        mutate {
          rename => { "[sophos][xg][ws_protocol]" => "[http][version]"}
        }
      }
      if [sophos][xg][useragent] != 'null' {
        mutate {
          rename => { "[sophos][xg][useragent]" => "[user_agent][original]"}
        }
      }
      mutate {
        rename => { "[sophos][xg][SQLi]" => "[sophos][xg][sqli]" }
      }
      mutate {
        rename => { "[sophos][xg][XSS]" => "[sophos][xg][xss]" }
      }
    }

    ################ wifi ###############
    if [IngestPipeline] == "wifi" {
      mutate {
        add_field => { "[event][kind]" => "event" }
      }
      mutate {
        add_field => { "[event][outcome]" => "success" }
      }
      mutate {
        convert => { "[sophos][xg][clients_conn_ssid]" => "integer" }
      }

    }

    mutate {
              rename => { "[sophos][xg][fw_rule_name]" => "[rule][name]"}
    
              rename => { "[sophos][xg][log_id]" => "[event][code]"}
    }
    
   # if [observer][vendor] == "sophos" and ( [observer][product] == "XG" or [observer][product] == "sophos" or [observer][product] == "ngfw-sophos" )
}
#}



output{stdout {codec => json}}